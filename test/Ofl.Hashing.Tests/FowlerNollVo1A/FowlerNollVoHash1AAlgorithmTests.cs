using System;
using System.Linq;
using System.Text;
using Ofl.Hashing.FowlerNollVo1A;
using Xunit;

namespace Ofl.Hashing.Tests.FowlerNollVo1A
{
    public class FowlerNollVoHash1AAlgorithmTests
    {
        [Theory]
        [InlineData("", 0x811c9dc5)]
        [InlineData("a", 0xe40c292c)]
        [InlineData("b", 0xe70c2de5)]
        [InlineData("c", 0xe60c2c52)]
        [InlineData("d", 0xe10c2473)]
        [InlineData("e", 0xe00c22e0)]
        [InlineData("f", 0xe30c2799)]
        [InlineData("fo", 0x6222e842)]
        [InlineData("foo", 0xa9f37ed7)]
        [InlineData("foob", 0x3f5076ef)]
        [InlineData("fooba", 0x39aaa18a)]
        [InlineData("foobar", 0xbf9cf968)]
        [InlineData("", 0x050c5d1f)]
        [InlineData("a", 0x2b24d044)]
        [InlineData("b", 0x9d2c3f7f)]
        [InlineData("c", 0x7729c516)]
        [InlineData("d", 0xb91d6109)]
        [InlineData("e", 0x931ae6a0)]
        [InlineData("f", 0x052255db)]
        [InlineData("fo", 0xbef39fe6)]
        [InlineData("foo", 0x6150ac75)]
        [InlineData("foob", 0x9aab3a3d)]
        [InlineData("fooba", 0x519c4c3e)]
        [InlineData("foobar", 0x0c1c9eb8)]
        [InlineData("ch", 0x5f299f4e)]
        [InlineData("cho", 0xef8580f3)]
        [InlineData("chon", 0xac297727)]
        [InlineData("chong", 0x4546b9c0)]
        [InlineData("chongo", 0xbd564e7d)]
        [InlineData("chongo ", 0x6bdd5c67)]
        [InlineData("chongo w", 0xdd77ed30)]
        [InlineData("chongo wa", 0xf4ca9683)]
        [InlineData("chongo was", 0x4aeb9bd0)]
        [InlineData("chongo was ", 0xe0e67ad0)]
        [InlineData("chongo was h", 0xc2d32fa8)]
        [InlineData("chongo was he", 0x7f743fb7)]
        [InlineData("chongo was her", 0x6900631f)]
        [InlineData("chongo was here", 0xc59c990e)]
        [InlineData("chongo was here!", 0x448524fd)]
        [InlineData("chongo was here!\n", 0xd49930d5)]
        [InlineData("ch", 0x1c85c7ca)]
        [InlineData("cho", 0x0229fe89)]
        [InlineData("chon", 0x2c469265)]
        [InlineData("chong", 0xce566940)]
        [InlineData("chongo", 0x8bdd8ec7)]
        [InlineData("chongo ", 0x34787625)]
        [InlineData("chongo w", 0xd3ca6290)]
        [InlineData("chongo wa", 0xddeaf039)]
        [InlineData("chongo was", 0xc0e64870)]
        [InlineData("chongo was ", 0xdad35570)]
        [InlineData("chongo was h", 0x5a740578)]
        [InlineData("chongo was he", 0x5b004d15)]
        [InlineData("chongo was her", 0x6a9c09cd)]
        [InlineData("chongo was here", 0x2384f10a)]
        [InlineData("chongo was here!", 0xda993a47)]
        [InlineData("chongo was here!\n", 0x8227df4f)]
        [InlineData("cu", 0x4c298165)]
        [InlineData("cur", 0xfc563735)]
        [InlineData("curd", 0x8cb91483)]
        [InlineData("curds", 0x775bf5d0)]
        [InlineData("curds ", 0xd5c428d0)]
        [InlineData("curds a", 0x34cc0ea3)]
        [InlineData("curds an", 0xea3b4cb7)]
        [InlineData("curds and", 0x8e59f029)]
        [InlineData("curds and ", 0x2094de2b)]
        [InlineData("curds and w", 0xa65a0ad4)]
        [InlineData("curds and wh", 0x9bbee5f4)]
        [InlineData("curds and whe", 0xbe836343)]
        [InlineData("curds and whey", 0x22d5344e)]
        [InlineData("curds and whey\n", 0x19a1470c)]
        [InlineData("cu", 0x4a56b1ff)]
        [InlineData("cur", 0x70b8e86f)]
        [InlineData("curd", 0x0a5b4a39)]
        [InlineData("curds", 0xb5c3f670)]
        [InlineData("curds ", 0x53cc3f70)]
        [InlineData("curds a", 0xc03b0a99)]
        [InlineData("curds an", 0x7259c415)]
        [InlineData("curds and", 0x4095108b)]
        [InlineData("curds and ", 0x7559bdb1)]
        [InlineData("curds and w", 0xb3bf0bbc)]
        [InlineData("curds and wh", 0x2183ff1c)]
        [InlineData("curds and whe", 0x2bd54279)]
        [InlineData("curds and whey", 0x23a156ca)]
        [InlineData("curds and whey\n", 0x64e2d7e4)]
        [InlineData("hi", 0x683af69a)]
        [InlineData("hello", 0xaed2346e)]
        [InlineData("\xff\x00\x00\x01", 0x4f9f2cab)]
        [InlineData("\xff\x00\x00\x02", 0x02935131)]
        [InlineData("\xff\x00\x00\x03", 0xc48fb86d)]
        [InlineData("\xff\x00\x00\x04", 0x2269f369)]
        [InlineData("\x40\x51\x4e\x44", 0xc18fb3b4)]
        [InlineData("\x40\x51\x4e\x4a", 0x50ef1236)]
        [InlineData("\x40\x51\x4e\x54", 0xc28fb547)]
        [InlineData("127.0.0.1", 0x96c3bf47)]
        [InlineData("127.0.0.2", 0xbf8fb08e)]
        [InlineData("127.0.0.3", 0xf3e4d49c)]
        [InlineData("64.81.78.68", 0x32179058)]
        [InlineData("64.81.78.74", 0x280bfee6)]
        [InlineData("64.81.78.84", 0x30178d32)]
        [InlineData("feedface", 0x21addaf8)]
        [InlineData("feedfacedaffdeed", 0x4217a988)]
        [InlineData("feedfacedeadbeef", 0x772633d6)]
        [InlineData("line 1\nline 2\nline 3", 0x08a3d11e)]
        [InlineData("chongo <Landon Curt Noll> /\\../\\", 0xb7e2323a)]
        [InlineData("chongo <Landon Curt Noll> /\\../\\", 0x07a3cf8b)]
        [InlineData("chongo (Landon Curt Noll) /\\../\\", 0x91dfb7d1)]
        [InlineData("chongo (Landon Curt Noll) /\\../\\", 0x06a3cdf8)]
        [InlineData("http://antwrp.gsfc.nasa.gov/apod/astropix.html", 0x6bdd3d68)]
        [InlineData("http://en.wikipedia.org/wiki/Fowler_Noll_Vo_hash", 0x1d5636a7)]
        [InlineData("http://epod.usra.edu/", 0xd5b808e5)]
        [InlineData("http://exoplanet.eu/", 0x1353e852)]
        [InlineData("http://hvo.wr.usgs.gov/cam3/", 0xbf16b916)]
        [InlineData("http://hvo.wr.usgs.gov/cams/HMcam/", 0xa55b89ed)]
        [InlineData("http://hvo.wr.usgs.gov/kilauea/update/deformation.html", 0x3c1a2017)]
        [InlineData("http://hvo.wr.usgs.gov/kilauea/update/images.html", 0x0588b13c)]
        [InlineData("http://hvo.wr.usgs.gov/kilauea/update/maps.html", 0xf22f0174)]
        [InlineData("http://hvo.wr.usgs.gov/volcanowatch/current_issue.html", 0xe83641e1)]
        [InlineData("http://neo.jpl.nasa.gov/risk/", 0x6e69b533)]
        [InlineData("http://norvig.com/21-days.html", 0xf1760448)]
        [InlineData("http://primes.utm.edu/curios/home.php", 0x64c8bd58)]
        [InlineData("http://slashdot.org/", 0x97b4ea23)]
        [InlineData("http://tux.wr.usgs.gov/Maps/155.25-19.5.html", 0x9a4e92e6)]
        [InlineData("http://volcano.wr.usgs.gov/kilaueastatus.php", 0xcfb14012)]
        [InlineData("http://www.avo.alaska.edu/activity/Redoubt.php", 0xf01b2511)]
        [InlineData("http://www.dilbert.com/fast/", 0x0bbb59c3)]
        [InlineData("http://www.fourmilab.ch/gravitation/orbits/", 0xce524afa)]
        [InlineData("http://www.fpoa.net/", 0xdd16ef45)]
        [InlineData("http://www.ioccc.org/index.html", 0x60648bb3)]
        [InlineData("http://www.isthe.com/cgi-bin/number.cgi", 0x7fa4bcfc)]
        [InlineData("http://www.isthe.com/chongo/bio.html", 0x5053ae17)]
        [InlineData("http://www.isthe.com/chongo/index.html", 0xc9302890)]
        [InlineData("http://www.isthe.com/chongo/src/calc/lucas-calc", 0x956ded32)]
        [InlineData("http://www.isthe.com/chongo/tech/astro/venus2004.html", 0x9136db84)]
        [InlineData("http://www.isthe.com/chongo/tech/astro/vita.html", 0xdf9d3323)]
        [InlineData("http://www.isthe.com/chongo/tech/comp/c/expert.html", 0x32bb6cd0)]
        [InlineData("http://www.isthe.com/chongo/tech/comp/calc/index.html", 0xc8f8385b)]
        [InlineData("http://www.isthe.com/chongo/tech/comp/fnv/index.html", 0xeb08bfba)]
        [InlineData("http://www.isthe.com/chongo/tech/math/number/howhigh.html", 0x62cc8e3d)]
        [InlineData("http://www.isthe.com/chongo/tech/math/number/number.html", 0xc3e20f5c)]
        [InlineData("http://www.isthe.com/chongo/tech/math/prime/mersenne.html", 0x39e97f17)]
        [InlineData("http://www.isthe.com/chongo/tech/math/prime/mersenne.html#largest", 0x7837b203)]
        [InlineData("http://www.lavarnd.org/cgi-bin/corpspeak.cgi", 0x319e877b)]
        [InlineData("http://www.lavarnd.org/cgi-bin/haiku.cgi", 0xd3e63f89)]
        [InlineData("http://www.lavarnd.org/cgi-bin/rand-none.cgi", 0x29b50b38)]
        [InlineData("http://www.lavarnd.org/cgi-bin/randdist.cgi", 0x5ed678b8)]
        [InlineData("http://www.lavarnd.org/index.html", 0xb0d5b793)]
        [InlineData("http://www.lavarnd.org/what/nist-test.html", 0x52450be5)]
        [InlineData("http://www.macosxhints.com/", 0xfa72d767)]
        [InlineData("http://www.mellis.com/", 0x95066709)]
        [InlineData("http://www.nature.nps.gov/air/webcams/parks/havoso2alert/havoalert.cfm", 0x7f52e123)]
        [InlineData("http://www.nature.nps.gov/air/webcams/parks/havoso2alert/timelines_24.cfm", 0x76966481)]
        [InlineData("http://www.paulnoll.com/", 0x063258b0)]
        [InlineData("http://www.pepysdiary.com/", 0x2ded6e8a)]
        [InlineData("http://www.sciencenews.org/index/home/activity/view", 0xb07d7c52)]
        [InlineData("http://www.skyandtelescope.com/", 0xd0c71b71)]
        [InlineData("http://www.sput.nl/~rob/sirius.html", 0xf684f1bd)]
        [InlineData("http://www.systemexperts.com/", 0x868ecfa8)]
        [InlineData("http://www.tq-international.com/phpBB3/index.php", 0xf794f684)]
        [InlineData("http://www.travelquesttours.com/index.htm", 0xd19701c3)]
        [InlineData("http://www.wunderground.com/global/stations/89606.html", 0x346e171e)]
        [InlineData("21701", 0x91f8f676)]
        [InlineData("M21701", 0x0bf58848)]
        [InlineData("2^21701-1", 0x6317b6d1)]
        [InlineData("\x54\xc5", 0xafad4c54)]
        [InlineData("\xc5\x54", 0x0f25681e)]
        [InlineData("23209", 0x91b18d49)]
        [InlineData("M23209", 0x7d61c12e)]
        [InlineData("2^23209-1", 0x5147d25c)]
        [InlineData("\x5a\xa9", 0x9a8b6805)]
        [InlineData("\xa9\x5a", 0x4cd2a447)]
        [InlineData("391581216093", 0x1e549b14)]
        [InlineData("391581*2^216093-1", 0x2fe1b574)]
        [InlineData("\x05\xf9\x9d\x03\x4c\x81", 0xcf0cd31e)]
        [InlineData("FEDCBA9876543210", 0x6c471669)]
        [InlineData("\xfe\xdc\xba\x98\x76\x54\x32\x10", 0x0e5eef1e)]
        [InlineData("EFCDAB8967452301", 0x2bed3602)]
        [InlineData("\xef\xcd\xab\x89\x67\x45\x23\x01", 0xb26249e0)]
        [InlineData("0123456789ABCDEF", 0x2c9b86a4)]
        [InlineData("\x01\x23\x45\x67\x89\xab\xcd\xef", 0xe415e2bb)]
        [InlineData("1032547698BADCFE", 0x18a98d1d)]
        [InlineData("\x10\x32\x54\x76\x98\xba\xdc\xfe", 0xb7df8b7b)]
        [InlineData("\x00", 0x241e9075)]
        [InlineData("\x07", 0x063f70dd)]
        [InlineData("~", 0x0295aed9)]
        [InlineData("\x7f", 0x56a7f781)]
        public void Test_32Bit(string test, int expected)
        {
            // Create the hash algorithm.
            IHashAlgorithm hashAlgorithm = new FowlerNollVoHash1AAlgorithm(
                FowlerNollVoHash1AAlgorithmParameter._32Bit);

            // Get the bytes.
            byte[] bytes = Encoding.UTF8.GetBytes(test);

            // Hash each character, use each octet in UTF8?
            hashAlgorithm.TransformBlock(bytes, 0, bytes.Length);

            // Get the hash, convert to an integer and compare.'
            Assert.Equal(expected,
                BitConverter.ToInt32(hashAlgorithm.GetRunningHash().ToArray(), 0));
        }
    }
}
